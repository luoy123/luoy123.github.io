[{"title":"Day01 Linux环境的配置","url":"/2024/04/25/LInux/Day01%20Linux%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/","content":"\n \n\n Day01 Linux环境的配置\n\n\n使用的系统： RadHat6\n使用的虚拟机软件： VMware workstaiont Pro\n使用的远程连接软件： SecureCRT\n\n\n 1.网络连接的三种模式\n 1.1 桥接模式\n在桥接模式下，虚拟机等同于一个独立的主机。通过物理主机的网卡来访问外网，同时外网也可以访问该虚拟机。\n应用： 在学校的机房中，每个学生的虚拟机在同一网段上，所以老师可以对其进行控制，发送资料，同时学生之间可以进行通信，学生与外部网络也能进行通信。\n条件:\n\n虚拟主机的ip地址和物理主机的ip地址在同一网段，才能进行通信\n\n\n模式图\n\n 1.1 在vmware中设置步骤\n第一步：\n\n第二步：\n\n第三步：\n\n要进行选择的网卡类型：\n\n 1.2 仅主机模式\n在仅主机模式下，对应的虚拟网络是&quot;VMnet1&quot;,是一个独立的虚拟网络，与物理主机相隔离。所以该虚拟机只能和主机或设为仅主机的虚拟机通信，但是无法与外网进行通信。\n应用: 当我们需要进行病毒测试时，就只能在内网中进行测试，防止感染到网络上其他的主机。\n条件\n\n\n设置完成后，重启虚拟机，同时可以查看适配器信息来判断是否成功\n\n\n模式图\n\n 1.3 NAT模式\n在NAT模式下对应的虚拟网卡为&quot;VMnet8&quot;,虚拟机使用物理机的ip地址来与外网进行通信，但外部的物理主机无法主动的与虚拟机进行通信，只能实现虚拟机到外部网络的单向通信。当物理主机（VMnet8)和虚拟机ip在同一网段时，可以进行通信。\n应用: 最常用的设置，需要访问外部网络。\n条件：\n\n\n\n\n 2. 永久的配置网络（NAT模式）\n由于自动开启了DHCP服务，每次虚拟机重启后都会重新的进行ip的分配，当我们用工具进行连接时每次都要重新输入太麻烦了。\n前提知识点:\n\n\n\nping + ip、网址：用来查看网络是否联通，当有包返回则说明连接。\n\n\n当虚拟机内可以ping通百度网址，同时也能ping同物理主机的ip，但是物理主机无法ping通虚拟主机的ip,则存在两种可能行。\n\n\n\n物理机的网卡没有配置正确，则按照如下进行解决。\n\n\n\n\n物理机没有启动对应的服务\n\n\n\n\n\n文件的配置永远是高于命令行的配置的。\n\n\n网络配置重启命令：\n\n\nRedHat6/centos7:\n  service network restart\ncentos8:先关闭网卡，在打开网卡\n  systemctl restart network \n\n查看虚拟的ip信息\n\n  ifconfig\n\n\n 2.1 临时的进行设置\n通过命令进行修改: 该种方法临时有效的，当下次重启虚拟机后则可能会生成一个新的ip。所以我们可以每次在虚拟机中配置和上次ssh连接软件相同的ip.\n\n格式： ifconfig + 网卡名 + ip地址  + netmask 255.255.255.0\n\nifconfig eth0 192.168.80.1 netmask 255.255.255.0\n 2.2 永久的进行设置\n通过文件进行修改：该种方法是永久有效的。\n步骤：\n\n\n先删除原始的配置\n\n\n\n进行到对应系统的网络配置文件中,由于每个人的配置文件名可能不一致，建议先查看存在哪些网络配置文件再修改。\n\nRadHat6:\n  cd /etc/sysconfig/network-scripts   # 进行存放配置文件的路径下\n  ls         #查看存在的文件\n\n\n\n进入并编辑文件\n\n  vi  ifcfg-Wired_connection_1   #进入配置文件进行编辑\n我们只要设置TYPE,BOOTPROTO,IPADDR,GATEWAY,NETMASK,NAME,ONBOOT,NDS即可\n\n修改完毕后保存退出，并重启网络服务。\n\n  service network restart.\n\n最后在查看ip，看是否设置成功，有时可能要重启才能成功\n\n  ifconfig\n\n","categories":["Linux"],"tags":["Linux"]},{"title":"hexo -Butterfly 常见问题","url":"/2024/05/10/Others/hexo-Butterfly/","content":" hexo-Butterfly\n 1.问题汇总\n 1.1图片类问题\n\n问题描述:通过图床获取的图片链接，在typora文件中能够跳转使用，但是在hexo博客上无法显示图片？\n问题本质：主要是因为在http请求头中有referrer字段，用来表示发送http请求的源地址信息。服务器拿到referrer后判断是否来自本站，若不是则返回403，但由于我利用了gitee的仓库作为了图床，所以请求的gitee服务器上的资源，但是却把自己的referrer字段发送过去了，因为对方服务器返回403 forbidden.\n解决方法：\n\n在每个.md文件的开头，将 referrer 设置成no referrer.\n\n  &lt;head&gt;\t&lt;meta name=&quot;referrer&quot; content=&quot;no referrer&quot;&gt;&lt;head&gt;\n\n","categories":["Problem"],"tags":["Problem"]},{"title":"Day02 磁盘管理和文件管理","url":"/2025/05/10/LInux/Day02%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%92%8C%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/","content":"\n \n\n Day02 磁盘管理和文件管理\n 1. 磁盘分区和格式化\n 1.1 Linux磁盘分区和表示方法\n三种磁盘类型：\n\n主分区：可以直接进行使用，已经分配了空间，编号从1~4。\n扩展分区：也是主分区，但不能直接使用，相当与存在未分配空间的容器。\n逻辑分区：在拓展分区下创建，逻辑分区的数据不受主引导扇区的限制，（eg:STAT和SCSI接口类型的磁盘在linux中最多创建12个），编号从5开始。\n\n\n编号的设定原因：在主引导扇区(MBR)中，用来存放扇区信息的大小为64字节，而每一个分区要占用的大小为16字节，所以一个磁盘最多有4个分区，编号从1~4，则逻辑分区从5开始。\n\n表示方法：\n\n\n硬盘：对于SATA和SCSI接口的磁盘，以sdx来命名磁盘，x可以为a,b,c,d...，分别代表第1，2，3，4...1，2，3，4...1，2，3，4...块磁盘。\n\n\n分区：以磁盘设备文件名为基础，后面添加上分区对应的数字序号。eg:sda1:代表第一块磁盘的第一个分区，sda2:代表第一块磁盘的第二个分区。\n\n\n\n 1.2 Linux的文件系统\nwindows中常用的的文件系统:\n\n\n\n特性\nFAT32\nNTFS（目前主流）\n\n\n\n\n最大文件大小\n4GB\n16EB\n\n\n最大分区大小\n32GB(实际2TB)\n256TB(windows限制)\n\n\n兼容性\n跨平台\nwindows最好\n\n\n安全行\n较差，无权限管理\n可以进行加密，或者日志记录\n\n\n使用场景\nu盘，旧设备\n固态，机械硬盘\n\n\n\nlinux中常用的文件系统：\n\n\n\n特性\next4\nXFS\n\n\n\n\n最大文件大小\n16TB\n8EB\n\n\n使用的场景\n通用\n大文件/高并发\n\n\n\n我们可以通过命令来查看当前系统中可以使用的文件系统类型：\n\n&gt;sudo cat /etc/filesystems\n\n其中iso9660是光盘类型的文件，同时还存在一种特殊类型的文件系统，swap文件系统专门给swap分区使用，一般设置成虚拟机物理内存2倍，当我们安装linux系统，如果是系统自动分区，则会自动的创建swap分区。\n\n 1.3 查看分区信息\nfdisk -l\n\n\nBoot:表示是否为引导块，为*,则代表为引导分区\nStart:扇区的起始位置\nEnd:扇区的终止位置\nBlocks:扇区的空间大小\nID:扇区对应的编号，其中83代表为XFS分区，8e代表LVM分区，82代表交换分区。\nSystem:对应的文件系统，Linux是XFS文件系统，Linux LVM是逻辑卷。\n\n 1. 4磁盘的创建和与格式化\n 1.4.1 创建\n\n 1.4.2 fdisk进行分区\n根据上面所学的知识，我们应该可以猜到进行磁盘分区的命令：\nsudo fdisk /dev/sdb   #我们需要对第二块磁盘进行分区\n常用的一些参数：\n\n⭐️实验测试：创建一个主分区，一个拓展分区，一个逻辑分区。\n\n\n\n查看是否分区成功：\n\n\n先看在磁盘分区保存后的情况。\n\n\n\n在判断系统内核是否已经识别到新的磁盘分区\ncat /proc/partitions\n\n\n\n 1.4.3 格式化\n利用mkfs命令来个磁盘分区进行格式化，需要注意的是在格式化时会将所有的数据进行擦除。\n使用语法：\nmkfs -t 文件系统类型 磁盘分区文件名 \n将sdb1格式化成ext4文件系统\nmkfs -t ext4 /dev/sdb1\n将sdb5格式化成xfs文件系统\nmkfs -t xfs /dev/sdb5\n 2.临时挂载\n\n\n我们知道在Linux中一个皆文件，所以当我们需要对新的磁盘分区进行访问时，需要将将其挂载到某个目录上，通过这个目录来访问磁盘中的数据。\n\n\n/和/boot系统会自动的对磁盘分区进行挂载，而在其他的目录下则需要手动的进行挂载。\n\n\nLinux中存在两个默认的挂载点，/media:用来实现自动挂载的，/mnt：用来实现手动的挂载。\n\n\n使用语法：\nmount [-t 文件类型] 设备文件名 挂载点    #进行挂载unmount  挂载点\t\t\t\t\t#取消挂载\n注意事项：作为挂载点的目录，会自动的隐藏起来，则无法进行查看，所以最好创建空目录来作为挂载点\n\n流程：先挂载到/home下，查看文件信息，在卸载，再查看文件信息\n\n\n 2.1 挂载测试\n 2.1.1 挂载硬盘\n我们在/mnt下创建一个目录为/test来作为挂载点。\n\n查看系统中已经挂载的设备: df\n-h : 人性化显示，eg:100MB,100Gb等-T :显示挂载信息\n\n\n 2.1.2 挂载光驱、u盘和iso文件\n我们将/dev/cdrom挂载到/mnt/cdrom上\n\n挂载u盘和iso文件都是类似的方法，但iso文件在挂载时要添加参数\nmount -o loop iso文件  # 挂载iso文件\n 3. 卸载\n通过卸载挂载点目录的位置来进行卸载即可。\numont /mnt/cdrom       #卸载光驱所在的挂载点目录\n注意事项：当我们在进行卸载时，可能会经常遇到如下的报错：\n\n翻译过来就是设被处于忙碌的状态，可能的原因有进程正在使用文件，或者你处在挂载目录下，进行卸载。解决方法就是kill使用该问文件的进程，或者退出当前目录下即可。\n 4.永久的进行挂载\n我们需要注意的是在Linux一般通过命令来进行设置的选项都是临时的，想要永久的进行保存，就要通过文件来进行修改。挂载相关的文件是/etc/fstab(file system table)文件系统表。\n\n正方形框起来的一个部分为一个字段，一共有6个字段，从左往右分别为\n\n挂载的设备名称：可以用UUID或者文件设备名\n挂载点目录\n文件系统的类型\n挂载选项：一般设置成defalts\n存储设备是否需要进行dump配备：0为不要，1为要。\n系统启动后是否进行自动检测和检测的顺序： 0代表不检测，1代表先检测，然后在2，若存在多个需要检测的分区，则都设置成2.\n\n 4.1 永久挂载测试\n**流程：**将sdb1和sdb5进行挂载，挂载完毕后重新启动虚拟机，再查看挂载是否成功。\n\n1.查看设备文件的id\n&gt;sudo /blkid  设备文件名\n\n2.修改/etc/fstab\n\n3.重新运行配置文件并查看\n&gt;mount -a  #默认情况下修改了/etc/fstab 是要重启才能生效的，但是也可以用该命令让器立即生效，（-a all:会自动的检测/etc/fstab中未必挂载的磁盘，从而实现挂载。）\n\n\n 5. 磁盘配额\n 5.1 基本概念\n磁盘配额主要是针对用户和用户组来进行设置的，只在指定的文件系统内有效。常见的两方面的限制为磁盘容量和文件个数。\n\n磁盘容量以kb为单位，限制用户所用的磁盘容量的大小。\n文件个数，限制用户所能创建的文件个数。\n\n其中又存在软限制和硬限制：\n\n软限制：宽限期（默认7天，可以修改）内可以短暂的超出限制，但是会发出警告。\n硬限制：不存在宽限期，超出限制，禁止写入同时发出警告。\n\n 5.2 设置配额\n注意事项：\n\n在进行配额之前一定要先查看是否将SELINUX关闭，这个一种内核安全模块，会限制用户的访问范围，此时会导致用户无法进行添加的磁盘进行配额设置。\n\n查看当前Selinux的状态\n\n  sestatus\n\n\n修改对应的配置文件\n\n  vim /etc/selinux/config\n\n\n重启然后再查看状态\n\n\n\n\n生成配额文件\n\n&gt;quotacheck -acug &gt;-a :检测/etc/fstab下所有启动配额的文件系统,添加了a选项，则不用再在后面添加分区&gt;-c :强制创建新的配额文件（覆盖）&gt;-u/-g :检测用户/用户组配额&gt;-v\t:详细的执行过程\n\n\n\n\n编辑配置文件\n\n&gt;edquota -u  用户名&gt;-u 用户名   ：用来对用户进行配额&gt;-g 用户组名\t：用来对用户组进行配额，注意当存在多个用户组是，只对第一个用户组生效。\n会跳转到如下界面\n\n\n参数1：分区名\n参数2：磁盘空间大小\n参数3：软限制的大小，默认为KB\n参数4：硬限制的大小，默认为KB\n参数5：文件的个数\n参数6:  软限制的文件的个数\n参数7：硬限制的文件的个数\n\n\n\n\n启动配额文件\n\n&gt;sudo quotaon -augv&gt;-a :检测/etc/fstab下所有启动配额的文件系统,添加了a选项，则不用再在后面添加分区&gt;-u/-g :检测用户/用户组配额&gt;-v\t:详细的执行过程\n\n\n\n 5.3 测试配额\n我们在上面设置了磁盘的硬限制为100MB,文件个数的软限制为2，硬限制为3.\n⭐️生成指定大小的文件：\n\n通过dd命令来生成，dd的作用是用来数据备份和迁移的。\n语法：\n&gt;dd if=文件路径 of=文件路径 bs=1000  count=100 #生成100MB的文件\n\n\nif：input file\n\n\nof: output file\n\n\nbs: (block size)磁盘块的大小，单位为kb\n\n\ncount: 磁盘块的个数\n\n\n\n\n\n生成60MB大小的文件\n\n\n\n编辑user1的配额文件，同时将这100MB的文件多次的复制到/mnt/test下查看结果\n\nuser1的配置文件：\n\nedquota -u user1\n\n\n\n切换到user1用户,并移动文件,这里的rubush是自己创建的一个目录\ncp /rubush/smallfile s1\n\n\n\n 5.4 查看用户或分区的信息\n语法\n用法1：针对用户\nquota -u/g  用户名/用户组名-v: 详细信息-s : 人类习惯的单位，eg:`MB`\n\n用法2：针对分区\nrepquota -a :检查`/etc/fstab`中的所有挂载了的分区-u 用户名 ：单个用户-g 用户组名 ：单个用户组-v :详细信息-s :人类习惯的方式\n\n\n\n 6. LVM（逻辑卷管理）\nLVM：（Logic Volume Manage)逻辑卷管理。建立在物理磁盘和分区之间的逻辑层。最大的特点是可以动态的对磁盘进行管理。因为在传统的磁盘管理上，想要进行对容量进行改变，只能先初始化磁盘，在进行改变。而\nLVM则不需要。\n 6.1 四大组成部件\n\n\nPV（physical volum):物理卷：处理逻辑卷管理的最顶层，可以为物理分区，或物理磁盘，或者为raid。\n\n\nVG（volume grop）:卷组：建立在物理卷之上，卷组中最少要存在一个物理卷，当卷组创建后能够动态的\n添加删除物理卷。\n\n\nLV（logic volum）:逻辑卷：建立在卷组之上，把卷组中未进行使用的空间来分配给逻辑卷，逻辑卷创建后也可以进行动态的添加和删除容量。同时一个LV可以来自一块分区，也可能来自多块分区。但是要注意一个逻辑卷是不能来自多个卷组的。\n\n\nPE（physical extent）:物理块，LVM的最小存储单位，默认为4MB4MB4MB.\n\n\n拓展知识点：\n\n磁盘的最小存储单位：sector(扇区)，默认大小为0.5kB0.5kB0.5kB\n文件系统的最小存储单位：block(块),默认大小为4KB4KB4KB\n\n结构图：\n\n\n 6.2 常用的LVM命令\n\n\n\n功能\nPV\nVG\nLV\n\n\n\n\ndisplay(产看详细信息)\npvdisplay\nvgdisplay\nlvdisplay\n\n\ncreate(创建)\npvcreate\nvgcreate\nlvcreate\n\n\nscan(扫描)\npvscan\nvgscan\nlvscan\n\n\nremove(移除)\npvremove\nvgremove\nlvremove\n\n\nextend(拓展)\n\nvgextend\nlvextend\n\n\nreduce(减少)\n\nvgreduce\nlvreduce\n\n\n\n 6.3 项目测试\n**目标：**将/dev/sdb5和/dev/sdb6合并成卷组vg0,在将vg0分成逻辑卷lv0和lv1,在利用/dev/sdb7对逻辑卷lv0进行增加容量。\n\n\n查看当前的磁盘信息\nsudo fdisk -l\n\n\n\n创建物理卷\nsudo pvcreate /dev/sdb5sudo pvcreate /dev/sdb6sudo pvcreate /dev/sdb7\n\n\n\n创建卷组\n语法：\nvgcreate [选项] 卷组名 物理卷选项：-s PE: 执行物理块的大小，默认为4KB,一般不进行修改\nsudo vgcreate vg0 /dev/sdb5 /dev/sdb6\n\n\n\n\n创建逻辑卷\n语法：\nlvcreate [选项] 逻辑卷大小 [-n 逻辑卷名称] 卷组名选项：-L :大小-l :指定PE的个数来进行创建，一般不用-n :逻辑卷名称\nsudo lvcreate -L +600M -n lv1 vg0sudo lvcreate -L +500M -n lv2 vg0\n\n\n\n\n格式化逻辑卷，并进行永久的挂载\n之前学习过了如何格式化和挂载，就不再演示。但是存在一个问题需要注意。\n\n\n\n\n对lv1进行增加200MB的容量\n\n\n先查看vg0的容量情况：\n\n\n\n先对卷组进行扩容\n语法：\nsudo vgextend 卷组名 物理卷\nsudo vgextend /vg0 /dev/sdb7   #将sdb7添加到vg0中sudo vgdisplay                 #产看卷组情况\n\n\n\n在对逻辑卷进行扩容\n语法：\nsudo lvextend [选项] [ 逻辑卷名] 选项：-L :大小-l :指定PE的个数来进行创建，一般不用-n :逻辑卷名称\nsudo lvextend -L +200M /dev/vg0/lv1\n\n\n\n由于文件系统在扩容后无法进行识别，需要对文件系统进行扩容\n对于ext4文件系统：\nsudo resize2fs /dev/vg0/lv1\n对于xfs文件系统：\nsudo xfs_growfs\n\n\n\n\n\n","categories":["Linux"],"tags":["Linux"]}]